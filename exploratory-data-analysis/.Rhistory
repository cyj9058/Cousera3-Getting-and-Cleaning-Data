1:365
Load$Load[0:24]
x=Load$Load[0:24]
append(X,x)
x
append(x,x)
x=Load$Load[0:24]
1:365
0:24
0:22
0:23
str(Load)
x=Load$Load[0:23]
y=Load$Load[0:23]
i=1
for(i in 1:365){
y=append(y,x)
}
y
str(y)
str(x)
len(x)
dim(x)
length(x)
str(Load)
x=Load$Load[0:24]
y=Load$Load[0:24]
i=1
for(i in 1:365){
y=append(y,x)
}
y
str(y)
y[8760:8784]
for(i in 1:364){
y=append(y,x)
}
y
str(y)
x=Load$Load[0:24]
y=Load$Load[0:24]
i=1
for(i in 1:364){
y=append(y,x)
}
y
str(y)
write.csv(y,file="sample")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
test_data<-read.csv("test.csv")
str(test_data)
test_data$REMARKS
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv("repdata_data_StormData.csv")
str(storm_data)
storm_data1<-storm_data
storm_data1$EVTYPE<-factor(storm_data$EVTYPE)
length(levels(factor(storm_data1$EVTYPE)))
head(levels(factor(storm_data1$EVTYPE)))
levels(factor(storm_data1$EVTYPE[0:100000]))
length(levels(factor(storm_data1$EVTYPE[0:200000])))
levels(factor(storm_data1$EVTYPE[0:200000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:400000])))
levels(factor(storm_data1$EVTYPE[0:400000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:500000])))
levels(factor(storm_data1$EVTYPE[0:500000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:500000])))
levels(factor(storm_data1$EVTYPE[0:550000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:600000])))
levels(factor(storm_data1$EVTYPE[0:600000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:650000])))
levels(factor(storm_data1$EVTYPE[0:650000]))[0:2]
levels(factor(storm_data1$EVTYPE[0:100000]))
length(levels(factor(storm_data1$EVTYPE[0:200000])))
levels(factor(storm_data1$EVTYPE[0:200000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:400000])))
levels(factor(storm_data1$EVTYPE[0:400000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:500000])))
levels(factor(storm_data1$EVTYPE[0:500000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:550000])))
levels(factor(storm_data1$EVTYPE[0:550000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:600000])))
levels(factor(storm_data1$EVTYPE[0:600000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:650000])))
levels(factor(storm_data1$EVTYPE[0:650000]))[0:2]
storm_data1$EVTYPE[550999]
storm_data1$EVTYPE[0:650000]
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.table("repdata_data_StormData.csv",sep=",",fill=TRUE)
str(storm_data)
storm_data1<-storm_data
storm_data1$EVTYPE<-factor(storm_data$EVTYPE)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.table("repdata_data_StormData.csv",sep=",",fill=TRUE, nrows = 0)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.table("repdata_data_StormData.csv",sep=",",fill=TRUE, nrows = -2)
storm_data1<-storm_data
storm_data1$V8<-factor(storm_data$V8)
length(levels(factor(storm_data1$V8)))
head(levels(factor(storm_data1$V8)))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv("repdata_data_StormData.csv",sep=",",fill=TRUE)
str(storm_data)
storm_data1<-storm_data
storm_data1$EVTYPE<-factor(storm_data1$EVTYPE)
length(levels(factor(storm_data1$EVTYPE)))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.table("repdata_data_StormData.csv",header=TRUE,sep=",")
storm_data1[1,547363]
storm_data1[0,547363]
storm_data1[0:36,547363]
storm_data1
storm_data1[1,]
storm_data1[547362,]
storm_data1[547363,]
length(storm_data1[547363,])
length(storm_data1[547362,])
length(storm_data1[547361,])
length(storm_data1[547364,])
length(storm_data1[547365,])
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.table("repdata_data_StormData.csv",header=TRUE,sep=",",fill = FALSE)
str(storm_data1)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv("repdata_data_StormData.csv",header=TRUE,sep=",",fill = FALSE)
storm_data[1:547362,0]$EVTYPE
storm_data[1:547362,]
storm_data[1:547362,]$EVTYPE
levels(factor(storm_data[1:547362,]$EVTYPE))
levels(factor(storm_data[547362:692288,]$EVTYPE))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv("repdata_data_StormData.csv",header=TRUE,sep=",",nrows=547362,fill = FALSE)
str(storm_data)
storm_data1<-storm_data
storm_data1$EVTYPE<-factor(storm_data1$EVTYPE)
length(levels(factor(storm_data1$EVTYPE)))
head(levels(factor(storm_data1$V8)))
head(levels(factor(storm_data1$EVTYPE)))
storm_data[547362,]
storm_data[547361,]
storm_data[547362,]$REMARKS
storm_data[547363,]$REMARKS
storm_data[547361,]$REMARKS
storm_data[547362,]$REMARKS
storm_data[547360,]$REMARKS
storm_data[547359,]$REMARKS
storm_data[547358,]$REMARKS
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv("repdata_data_StormData.csv",header=TRUE)
dim(storm_data)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.csv(conn)
dim(storm_data)
storm_data1<-storm_data
storm_data1$EVTYPE<-factor(storm_data1$EVTYPE)
length(levels(factor(storm_data1$EVTYPE)))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.csv(conn)
dim(storm_data)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
cols.to.read = c("BGN_DATE", "COUNTY", "STATE", "EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG", "CROPDMGEXP")
storm_data<-read.csv(conn,header = TRUE, colClasses = cols.to.read)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
cols.to.read = c("BGN_DATE", "COUNTY", "STATE", "EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG", "CROPDMGEXP")
col.names = colnames(read.csv(conn, nrows = 1))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
cols.to.read = c("BGN_DATE", "COUNTY", "STATE", "EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG", "CROPDMGEXP")
col.names = colnames(read.csv(conn, nrows = 1))
colClasses=c("NULL", NA)[(col.names %in% cols.to.read) + 1]
colClasses
col.names %in% cols.to.read
storm_data<-read.csv(conn,header = TRUE, colClasses=c("NULL", NA)[(col.names %in% cols.to.read) + 1])
dim(storm_data)
storm_data1<-storm_data
storm_data1$EVTYPE<-factor(storm_data1$EVTYPE)
str(storm_data)
levels(factor(storm_data1$TORNADO))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv(file="repdata_data_StormData.csv" ,header = TRUE, fill=FALSE)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.csv(file=conn ,header = TRUE, fill=FALSE)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.csv(file=conn ,header = TRUE, fill=FALSE,nrows=547363)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.csv(file=conn ,header = TRUE, fill=FALSE,nrows=547362)
storm_data[547362,0]
storm_data[547362,]
storm_data[547361,]
storm_data[547361,0]
storm_data[547361,0:1]
storm_data[547361]$STATE
storm_data[547361,0]$STATE
storm_data[547361,]$STATE
dim(storm_data[547361,])
str(storm_data[547361,])
str(storm_data[547361,])
read,line("repdata_data_StormData_test.csv")
read.line("repdata_data_StormData_test.csv")
readline("repdata_data_StormData_test.csv")
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.csv(file=conn ,header = TRUE, fill=TRUE)
dim(storm_data)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.csv(file=conn ,header = TRUE, fill=TRUE,encoding = " UTF-8")
dim(storm_data)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.csv(file=conn ,header=TRUE,sep=",",quote = "\"" )
dim(storm_data)
levels(factor(storm_data$EVTYPE))
length(levels(factor(storm_data$EVTYPE)))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,header=TRUE,sep=",",quote = "\"" )
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,header=TRUE,sep=",",fill=TRUE, quote = "\"" )
dim(storm_data)
levels(factor(storm_data$EVTYPE))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,header=TRUE,sep=",",fill=TRUE, quote = "\"",colClasses = colClasses )
dim(storm_data)
storm_data1<-storm_data
storm_data1$EVTYPE<-factor(storm_data1$EVTYPE)
length(levels(factor(storm_data1$EVTYPE)))
head(levels(factor(storm_data1$EVTYPE)))
levels(factor(storm_data1$EVTYPE[0:100000]))
length(levels(factor(storm_data1$EVTYPE[0:200000])))
levels(factor(storm_data1$EVTYPE[0:200000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:400000])))
levels(factor(storm_data1$EVTYPE[0:400000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:500000])))
levels(factor(storm_data1$EVTYPE[0:500000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:550000])))
levels(factor(storm_data1$EVTYPE[0:550000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:600000])))
levels(factor(storm_data1$EVTYPE[0:600000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:650000])))
levels(factor(storm_data1$EVTYPE[0:650000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:750000])))
levels(factor(storm_data1$EVTYPE[0:750000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:900000])))
levels(factor(storm_data1$EVTYPE[0:900000]))[0:2]
storm_data1$EVTYPE[550999]
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,header=TRUE,sep=",",fill=TRUE, quote = "\"",na.strings = "#" )
dim(storm_data)
(levels(factor(storm_data$EVTYPE)))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,header=TRUE,sep=",",fill=TRUE, quote = "\"",na.strings = "/n" )
dim(storm_data)
levels(factor(storm_data$EVTYPE))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,header=TRUE,sep=",",fill=TRUE, quote = "\"")
dim(storm_data)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,colClasses=colClasses, header=TRUE,sep=",",fill=TRUE, quote = "\"")
dim(storm_data)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,colClasses=colClasses, header=TRUE,sep=",",fill=TRUE, quote = "\"",strip.white = TRUE)
dim(storm_data)
levels(factor(storm_data$EVTYPE))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,colClasses=colClasses, header=TRUE,sep=",",fill=TRUE, quote = "\"",strip.white = TRUE,encoding = "latin1")
dim(storm_data)
levels(factor(storm_data$EVTYPE))
length(levels(factor(storm_data$EVTYPE)))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,colClasses=colClasses, header=TRUE,sep=",",fill=TRUE, quote = "\"",strip.white = TRUE,encoding = "UTF-8")
dim(storm_data)
levels(factor(storm_data$EVTYPE))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,colClasses=colClasses, header=TRUE,sep=",",fill=TRUE, quote = "\"", encoding = "UTF-8")
dim(storm_data)
levels(factor(storm_data$EVTYPE))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn ,colClasses=colClasses, header=TRUE,sep=",",fill=TRUE, encoding = "UTF-8")
dim(storm_data)
levels(factor(storm_data$EVTYPE))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn,header=TRUE,sep=",",fill=TRUE, encoding = "UTF-8")
dim(storm_data)
levels(factor(storm_data$EVTYPE))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn,header=TRUE,sep=",",fill=TRUE)
dim(storm_data)
levels(factor(storm_data$EVTYPE))
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
conn<-bzfile("repdata_data_StormData.csv.bz2","repdata_data_StormData.csv")
storm_data<-read.table(file=conn,header=TRUE,sep=",",fill=TRUE, encoding = "UTF-8")
dim(storm_data)
levels(factor(storm_data$EVTYPE))
Sys.setlocale('LC_ALL', 'en_US.UTF-8')
Sys.getlocale()
Sys.setlocale('LC_ALL', 'en_US.UTF-8')
Sys.getlocale()
Sys.setlocale( 'en_US.UTF-8')
Sys.setlocale( ,'en_US.UTF-8')
getwd90
getwd()
setwd("C:/Users/cyj90/github/study/exlporatory-data-analysis")
setwd("C:/Users/cyj90/github/study")
setwd("C:/Users/cyj90/github/study/exploratory-data-analysis")
NEI <- readRDS("exdata_data_NEI_data/summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
SCC <- readRDS("exdata_data_NEI_data/Source_Classification_Code.rds")
dir(NEC)
dir(NEI)
NEI
SCC
dim(NEI)
dim(SCC)
head(NEI)
head(SCC)
NEI
dim(NEI)
str(NEI)
str(SCC)
chicago<-readRDS("chicago_data/chicago.rds")
dim(chicago)
names(chicago)[1:3]
select(chicago,-(city:dptp))
library(dplyr)
select(chicago,-(city:dptp))
str(chicago)
match("city",names(chicago))
i<-match("city",names(chicago))
i
j<-match("city",names(chicago))
j
chicago<-readRDS("chicago_data/chicago.rds")
j
head(chicago[,-(i:j)])
j
j<-match("dptp",names(chicago))
head(chicago[,-(i:j)])
j
chic.f<-filter(chicago,pm25tmean2>30)
chic.f
filter(chicago,city!="chic")
filter(chicago,city=!"chic")
filter(chicago,city!!="hic")
filter(chicago,city!="hic")
filter(chicago,city!="chic")
arrange(chicago,date)
arrange(chicago,desc(date))
rename(chicago,dewpoint=dptp,pm25=pm25tmean2)
mutate(chicago,pm25detrend=pm25-mean(pm25,na.rm=TRUE))
chicago1<-rename(chicago,dewpoint=dptp,pm25=pm25tmean2)
mutate(chicago1,pm25detrend=pm25-mean(pm25,na.rm=TRUE))
str(chicago2)
chicago2<-mutate(chicago1,pm25detrend=pm25-mean(pm25,na.rm=TRUE))
chicago2<-mutate(chicago1,pm25detrend=pm25-mean(pm25,na.rm=TRUE))
str(chicago2)
chicago1$pm25
str(chicago2)
chicago3<-mutate(chicago2, year=as.POSIXct(date)$year+1900)
as.POSIXct(chicago3$date)
as.POSIXct(chicago2$date)
as.POSIXct(chicago2$date)$year
x<-as.POSIXct(chicago2$date)
x$year
as.POSIXlt(date)$year
as.POSIXlt(chicago2$date)$year
as.POSIXlt(chicago2$date)
chicago3<-mutate(chicago2, year=as.POSIXlt(date)$year+1900)
years <-group_by(chicago,year)
years <-group_by(chicago3,year)
years
str(years)
str(years)
str(chicago3)
str(years)
summarize(years, pm25=mean(pm25,na.rm=TRUE),o3=max(o3tmean2,na.rm=TRUE), no2=median(no2teman2,na.rm = TRUE) )
names(chicago3)
summarize(years, pm25=mean(pm25,na.rm=TRUE),o3=max(o3tmean2,na.rm=TRUE), no2=median(no2teman2,na.rm=TRUE))
summarize(years, pm25=mean(pm25,na.rm=TRUE),o3=max(o3tmean2,na.rm=TRUE), no2=median(no2tmean2,na.rm=TRUE))
str(years)
group_by(chicago3,year) %>%
summarize(pm25=mean(pm25,na.rm=TRUE),o3=max(o3tmean2,na.rm=TRUE), no2=median(no2tmean2,na.rm=TRUE))
install.packages("readr")
library(readr)
ozone<-read_csv("/hourly_44201_2014.csv")
ozone<-read_csv("hourly_44201_2014.csv")
#5_Exploratory_Data_Analysis_Checklist
ozone<-read_csv("hourly_44201_2014.csv",col_types = "ccccinnccccccncnncccccc")
#5_Exploratory_Data_Analysis_Checklist
ozone<-read_csv("hourly_44201_2014.csv",col_types = "ccccinnccccccncnncccccc")
nrow(ozone)
ncol(ozone)
str(ozone)
str(ozone)
table(ozone$Time.Local)
table(ozone$`Date Local`)
ozone$`Date Local`
filter(ozone, Time.Local == "2014-04-15") %>%
select(State.Name, County.Name, Date.Local,Time.Local, Sample.Measurement)
filter(ozone, Date Local == "2014-04-15") %>%
select(State.Name, County.Name, Date.Local,Time.Local, Sample.Measurement)
names(ozone)
table(ozone$`Time Local`)
filter(ozone, Time Local == "13:14") %>%
select(State Name, County Name, Date Local,Time Local, Sample Measurement)
class(ozone)
names(ozone)
filter(ozone, Time Local == "13:00") %>%
select(State Name, County Name, Date Local,Time Local, Sample Measurement)
filter(ozone, Time Local == "13:00")
filter(ozone,Time Local == "13:00")
ozone$`Time Local`
filter(ozone, 'Time Local' == "13:00")
filter(ozone, 'Time Local' == "13:00") %>%
select('State Name', 'County Name', 'Date Local','Time Local', 'Sample Measurement')
ozone$`Time Local`
filter(ozone, 'Time Local' == "18:00") %>%
select('State Name', 'County Name', 'Date Local','Time Local', 'Sample Measurement')
x<-filter(ozone, 'Time Local' == "18:00") %>%
select('State Name', 'County Name', 'Date Local','Time Local', 'Sample Measurement')
x
select(ozone, State.Name) %>% unique %>% nrow
unique(ozone$`State Name`)
unique(ozone$`Time Local`)
select(ozone, 'State.Name') %>%
unique %>%
nrow
select(ozone, 'State Name') %>%
unique %>%
nrow
ranking<-group_by(ozone,'State Name', 'County Name') %>%
summarize(ozone=mean('sample Measurement')) %>%
as.data.frame %>%
arrange(desc(ozone))
ranking
ozone$`State Name`
ranking<-group_by(ozone,`State Name`, `County Name`) %>%
summarize(ozone=mean(`sample Measurement`)) %>%
as.data.frame %>%
arrange(desc(ozone))
group_by(ozone,'State Name', 'County Name')
ranking<-group_by(ozone,'State Name', 'County Name') %>%
summarize(ozone=mean('Sample Measurement')) %>%
as.data.frame %>%
arrange(desc(ozone))
ranking
ranking<-group_by(ozone,'State Name', 'County Name') %>%
summarize(ozone=mean('Sample Measurement')) %>%
as.data.frame %>%
arrange(desc(ozone))
ozone$'Sample Measurement'
mean(ozone$'Sample Measurement')
ranking<-group_by(ozone,'State Name', 'County Name') %>%
summarize(ozone = mean('Sample Measurement')) %>%
as.data.frame %>%
arrange(desc(ozone))
ozone$`State Name`
ozone$`County Name`
ozone$`Sample Measurement`
ranking<-group_by(ozone,'State Name', 'County Name')%>%
ranking<-group_by(ozone,'State Name', 'County Name')
ranking<-group_by(ozone,'State Name', 'County Name')
ranking
ranking<-group_by(ozone,'State Name', 'County Name') %>%
summarize(ozone= mean('Sample Measurement'))
ranking<-group_by(ozone,'State Name') %>%
summarize(ozone= mean('Sample Measurement'))
class(ozone$`Sample Measurement`)
ranking<-group_by(ozone,'State Name', 'County Name')
ranking
summarize(ranking
.ozone= mean('Sample Measurement'))
str(ranking)
summarize(ranking,ozone= mean('Sample Measurement'))
ozone$Sample Measurement
ozone$'Sample Measurement'
mean(ozone$'Sample Measurement')
summarize(ranking,ozone= mean('Sample Measurement'))
summarize(ranking,ozone= mean('Sample Measurement'))
ranking$`Sample Measurement`
class(ranking$`Sample Measurement`)
mean(ranking$`Sample Measurement`)
summarize(ranking,ozone=mean('Sample Measurement'))
summarize(ranking,ozone=mean('Sample Measurement',na.rm=TRUE))
summarize(ranking,ozone=mean('Sample Measurement',na.rm=TRUE))
summarize(ranking,ozone=mean(.ozone[['Sample Measurement'],na.rm=TRUE))
summarize(ranking,ozone=mean(.ozone[['Sample Measurement']],na.rm=TRUE))
summarize(ranking,ozone=mean(.ranking[['Sample Measurement']],na.rm=TRUE))
summarize(ranking,ozone=mean(.[['Sample Measurement']],na.rm=TRUE))
summarize(ranking,ozone=mean(.data[['Sample Measurement']],na.rm=TRUE))
