step_data_imputed$steps<-na_interpolation(step_data_imputed$steps)
ts_plot(step_data_imputed[,c("date","steps")])
by_date_imputed<-step_data_imputed %>%
group_by(date)%>%
summarise(
mean=mean(steps,na.rm=TRUE),
median=median(steps,na.rm=TRUE),
sum=sum(steps))
head(by_date_imputed)
mean(by_date_imputed$sum)
median(by_date_imputed$sum)
weekdays1<-c('월요일', '화요일', '수요일', '목요일', '금요일')
weekend1<-c('월요일', '화요일', '수요일', '목요일', '금요일')
step_data_imputed$ifweekday<-factor(step_data_imputed$weekdays %in% weekdays1,levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
step_data_imputed
weekdays1<-c('월요일', '화요일', '수요일', '목요일', '금요일')
weekend1<-c('월요일', '화요일', '수요일', '목요일', '금요일')
step_data_imputed$ifweekday=TRUE
step_data_imputed$ifweekday<-factor(step_data_imputed$weekdays %in% weekdays1,levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
step_data_imputed
library(imputeTS)
step_data_imputed<-step_data
step_data_imputed$steps<-na_interpolation(step_data_imputed$steps)
ts_plot(step_data_imputed[,c("date","steps")])
by_date_imputed<-step_data_imputed %>%
group_by(date)%>%
summarise(
mean=mean(steps,na.rm=TRUE),
median=median(steps,na.rm=TRUE),
sum=sum(steps))
head(by_date_imputed)
mean(by_date_imputed$sum)
median(by_date_imputed$sum)
step_data_imputed
step_data_imputed$weekdays<-weekdays.Date(step_data_imputed$date)
step_data_imputed_weekday<-filter(step_data_imputed,weekdays=="월요일" | weekdays=="화요일" | weekdays=="수요일"  | weekdays=="목요일"  | weekdays=="금요일")
step_data_imputed_weekend<-filter(step_data_imputed,weekdays=="토요일" | weekdays=="일요일")
head(step_data_imputed_weekday)
head(step_data_imputed_weekend)
weekdays1<-c('월요일', '화요일', '수요일', '목요일', '금요일')
weekend1<-c('월요일', '화요일', '수요일', '목요일', '금요일')
step_data_imputed$ifweekday<-factor(step_data_imputed$weekdays %in% weekdays1,levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
step_data_imputed
step_data_imputed_weekday<-filter(step_data_imputed,weekday == "weekday")
step_data_imputed_weekday<-filter(step_data_imputed,ifweekday == "weekday")
step_data_imputed_weekday<-filter(step_data_imputed,ifweekday == "weekend")
step_data_imputed_weekday<-filter(step_data_imputed,ifweekday == "weekday")
step_data_imputed_weekend<-filter(step_data_imputed,ifweekday == "weekend")
by_interval_imputed_weekday<-step_data_imputed_weekday %>%
group_by(interval)%>%
summarise(
mean=mean(steps,na.rm=TRUE))
by_interval_imputed_weekend<-step_data_imputed_weekend %>%
group_by(interval)%>%
summarise(
mean=mean(steps,na.rm=TRUE))
by_interval_imputed_weekday
by_interval_imputed_weekend
by_interval_imputed_weekday<-step_data_imputed_weekday %>%
group_by(interval)%>%
summarise(
mean=mean(steps,na.rm=TRUE))
by_interval_imputed_weekend<-step_data_imputed_weekend %>%
group_by(interval)%>%
summarise(
mean=mean(steps,na.rm=TRUE))
plot(x=by_interval_imputed_weekday$interval,y=by_interval_imputed_weekday$mean,type="l")
plot(x=by_interval_imputed_weekend$interval,y=by_interval_imputed_weekend$mean,type="l")
getwd()
knitr::opts_chunk$set(echo = TRUE)
by_interval_imputed_weekday<-step_data_imputed_weekday %>%
group_by(interval)%>%
summarise(
mean=mean(steps,na.rm=TRUE))
knitr::opts_chunk$set(echo = TRUE)
library(zoo)
library(TSstudio)
library(dplyr)
step_data<-read.csv("activity.csv")
step_data$date<-as.Date(step_data$date)
head(step_data)
by_date<-step_data%>%
group_by(date)%>%
summarise(
mean=mean(steps,na.rm=TRUE),
median=median(steps,na.rm=TRUE),
sum=sum(steps))
head(by_date)
hist(by_date$sum)
mean(by_date$sum,na.rm=TRUE)
median(by_date$sum,na.rm=TRUE)
by_interval<-step_data %>%
group_by(interval)%>%
summarise(
mean=mean(steps,na.rm=TRUE))
by_interval
plot(x=by_interval$interval,y=by_interval$mean,type="l")
head(arrange(by_interval,desc(mean)))
str(filter(step_data,is.na(steps)==TRUE))
library(imputeTS)
step_data_imputed<-step_data
step_data_imputed$steps<-na_interpolation(step_data_imputed$steps)
ts_plot(step_data_imputed[,c("date","steps")])
by_date_imputed<-step_data_imputed %>%
group_by(date)%>%
summarise(
mean=mean(steps,na.rm=TRUE),
median=median(steps,na.rm=TRUE),
sum=sum(steps))
head(by_date_imputed)
mean(by_date_imputed$sum)
median(by_date_imputed$sum)
step_data_imputed$weekdays<-weekdays.Date(step_data_imputed$date)
step_data_imputed_weekday<-filter(step_data_imputed,weekdays=="월요일" | weekdays=="화요일" | weekdays=="수요일"  | weekdays=="목요일"  | weekdays=="금요일")
step_data_imputed_weekend<-filter(step_data_imputed,weekdays=="토요일" | weekdays=="일요일")
head(step_data_imputed_weekday)
head(step_data_imputed_weekend)
weekdays1<-c('월요일', '화요일', '수요일', '목요일', '금요일')
weekend1<-c('월요일', '화요일', '수요일', '목요일', '금요일')
step_data_imputed$ifweekday<-factor(step_data_imputed$weekdays %in% weekdays1,levels=c(FALSE, TRUE), labels=c('weekend', 'weekday'))
step_data_imputed
step_data_imputed_weekday<-filter(step_data_imputed,ifweekday == "weekday")
step_data_imputed_weekend<-filter(step_data_imputed,ifweekday == "weekend")
by_interval_imputed_weekday<-step_data_imputed_weekday %>%
group_by(interval)%>%
summarise(
mean=mean(steps,na.rm=TRUE))
by_interval_imputed_weekend<-step_data_imputed_weekend %>%
group_by(interval)%>%
summarise(
mean=mean(steps,na.rm=TRUE))
plot(x=by_interval_imputed_weekday$interval,y=by_interval_imputed_weekday$mean,type="l")
plot(x=by_interval_imputed_weekend$interval,y=by_interval_imputed_weekend$mean,type="l")
step_data_imputed$weekdays<-weekdays.Date(step_data_imputed$date)
step_data_imputed_weekday<-filter(step_data_imputed,weekdays=="월요일" | weekdays=="화요일" | weekdays=="수요일"  | weekdays=="목요일"  | weekdays=="금요일")
step_data_imputed_weekend<-filter(step_data_imputed,weekdays=="토요일" | weekdays=="일요일")
head(step_data_imputed_weekday)
head(step_data_imputed_weekend)
plot(x=by_interval_imputed_weekend$interval,y=by_interval_imputed_weekend$mean,type="l")
getwd()
getwd()
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project`")
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project1")
install.packages("rmarkdown")
install.packages("rmarkdown")
library(rmarkdown)
render("PA1_template.Rmd", md_document())
render("PA1_template.Rmd", md_document())
render("PA1_template.Rmd", md_document())
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(imputeTS)
step_data_imputed<-step_data
step_data_imputed$steps<-na_interpolation(step_data_imputed$steps)
plot(x=step_data$date,step_data$steps)
library(imputeTS)
step_data_imputed<-step_data
step_data_imputed$steps<-na_interpolation(step_data_imputed$steps)
plot(x=step_data$date,step_data$steps,type="l")
library(imputeTS)
step_data_imputed<-step_data
step_data_imputed$steps<-na_interpolation(step_data_imputed$steps)
plot(x=step_data_imputed$date,step_data_imputed$steps,type="l")
render("PA1_template.Rmd", md_document())
getwd
getwd()
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
stormdata<-read.csv("repdata_data_StormData.csv")
head(stromdata)
head(stormdata)
head(stormdata)
str(stormdata)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv("repdata_data_StormData.csv")
str(stormdata)
storm_data$EVTYPE
storm_data$FATALITIES
storm_data$INJURIES
str(storm_data$EVTYPE)
as.factor(storm_data$EVTYPE)
storm_data$EVTYPE<-as.factor(storm_data$EVTYPE)
levels(storm_data$EVTYPE)
str(storm_data$EVTYPE)
storm_data$EVTYPE
levels(storm_data$EVTYPE)
storm_data$EVTYPE
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv("repdata_data_StormData.csv")
str(stormdata)
as.factor(storm_data1$EVTYPE)
storm_data1<-storm_data
as.factor(storm_data$EVTYPE)
factor(storm_data$EVTYPE)
levels(factor(storm_data1$EVTYPE))
str(storm_data1$EVTYPE)
str(factor(storm_data1$EVTYPE))
a<-storm_data1$EVTYPE
a
factor(a)
a[1:100]
levels(factor(a[1:100]))
levels(factor(a[1:1000]))
levels(factor(a[1:10000]))
levels(factor(a[1:20000]))
levels(factor(a[1:30000]))
levels(factor(a[1:40000]))
a[1:40000]
levels(factor(a))
str(storm_data1)
str(a)
levels(factor(a[1:50000]))
levels(factor(a[1:60000]))
levels(factor(a[1:200000]))
levels(factor(a[1:300000]))
levels(factor(a[1:400000]))
levels(factor(a[1:500000]))
levels(factor(a[1:600000]))
levels(factor(a[500000:600000]))
levels(factor(a[550000:600000]))
levels(factor(a[590000:600000]))
a[:590000]
a[1:590000]
levels(factor(a[0:590000]))
levels(factor(a[0:510000]))
levels(factor(a[0:520000]))
levels(factor(a[0:540000]))
levels(factor(a[0:550000]))
levels(factor(a[540000:5400100]))
levels(factor(a[540000]))
levels(factor(a[540000:540001]))
levels(factor(a[540000:540010]))
levels(factor(a[540000:540110]))
levels(factor(a[540000:540100]))
levels(factor(a[540000:540200]))
levels(factor(a[540000:540500]))
levels(factor(a[1:540500]))
levels(factor(a[540000:541000]))
levels(factor(a[540000:545000]))
levels(factor(a[540000:549000]))
levels(factor(a[545000:549000]))
levels(factor(a[545000:548000]))
levels(factor(a[545000:547000]))
levels(factor(a[547000:548000]))
levels(factor(a[547000:547500]))
a[547000:547500]
a[547500]
a[547499]
storm_data[547499]
storm_data(547499)
storm_data[547499,1:40]
library(dplyr)
select(storm_data,EVTYPE==" trees were blown down. Meanwhile")
str(storm_data)
storm_data[1,1]
storm_data[1,1:47]
storm_data[1,1:10]
storm_data[1,1:30]
storm_data[1,1:37]
storm_data[547499,1:10]
storm_data[547499,6:10]
storm_data[547499,7]
storm_data[547499,7:8]
storm_data[547499,8:9]
levels(fator(a))
levels(factor(a))
len(levels(factor(a)))
length(levels(factor(a)))
storm_data1<-storm_data
levels(factor(storm_data1$EVTYPE))
storm_data1<-storm_data
length(levels(factor(storm_data1$EVTYPE)))
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv("repdata_data_StormData.csv")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv("repdata_data_StormData.csv")
str(storm_data)
head(levels(factor(storm_data1$EVTYPE)))
storm_data1<-storm_data
length(levels(factor(storm_data1$EVTYPE)))
storm_data1<-storm_data
length(levels(factor(storm_data1$EVTYPE)))
head(levels(factor(storm_data1$EVTYPE)))
storm_data1$EVTYPE[0,0:500000]
storm_data1$EVTYPE[0:500000]
levels(factor(storm_data1$EVTYPE[0:500000]))
levels(factor(storm_data1$EVTYPE[0:100000]))
levels(storm_data1$EVTYPE[0:200000])
storm_data1<-storm_data
storm_data1$EVTYPE<-factor(storm_data$EVTYPE)
length(levels(storm_data1$EVTYPE))
head(levels(storm_data1$EVTYPE))
levels(storm_data1$EVTYPE[0:100000])
levels(storm_data1$EVTYPE[0:1000])
levels(storm_data1$EVTYPE[0:10000])
class(storm_data1$EVTYPE)
levels(storm_data1$EVTYPE[0:50000])
levels(storm_data1$EVTYPE[0:100])
storm_data1$EVTYPE[0:100]
levels(storm_data1$EVTYPE[0:100])
levels(factor(storm_data1$EVTYPE[0:100]))
levels(factor(storm_data1$EVTYPE[0:10000]))
levels(factor(storm_data1$EVTYPE[0:100000]))
storm_data1<-storm_data
storm_data1$EVTYPE<-factor(storm_data$EVTYPE)
length(levels(factor(storm_data1$EVTYPE)))
head(levels(factor(storm_data1$EVTYPE)))
levels(factor(storm_data1$EVTYPE[0:200000]))
length(levels(factor(storm_data1$EVTYPE[0:400000])))
length(levels(factor(storm_data1$EVTYPE[0:200000])))
length(levels(factor(storm_data1$EVTYPE[0:400000])))
length(levels(factor(storm_data1$EVTYPE[0:500000])))
length(levels(factor(storm_data1$EVTYPE[0:550000])))
length(levels(factor(storm_data1$EVTYPE[0:550000])))
length(levels(factor(storm_data1$EVTYPE[0:580000])))
levels(factor(storm_data1$EVTYPE[0:100000]))
length(levels(factor(storm_data1$EVTYPE[0:200000])))
length(levels(factor(storm_data1$EVTYPE[0:400000])))
length(levels(factor(storm_data1$EVTYPE[0:500000])))
length(levels(factor(storm_data1$EVTYPE[0:550000])))
length(levels(factor(storm_data1$EVTYPE[0:600000])))
length(levels(factor(storm_data1$EVTYPE[0:650000])))
levels(factor(storm_data1$EVTYPE[0:100000]))
length(levels(factor(storm_data1$EVTYPE[0:200000])))
head(levels(factor(storm_data1$EVTYPE[0:200000])))
length(levels(factor(storm_data1$EVTYPE[0:400000])))
head(levels(factor(storm_data1$EVTYPE[0:400000])))
length(levels(factor(storm_data1$EVTYPE[0:500000])))
head(levels(factor(storm_data1$EVTYPE[0:500000])))
length(levels(factor(storm_data1$EVTYPE[0:550000])))
head(levels(factor(storm_data1$EVTYPE[0:550000])))
length(levels(factor(storm_data1$EVTYPE[0:600000])))
head(levels(factor(storm_data1$EVTYPE[0:600000])))
length(levels(factor(storm_data1$EVTYPE[0:650000])))
head(levels(factor(storm_data1$EVTYPE[0:650000])))
levels(factor(storm_data1$EVTYPE[0:500000]))[0:2]
levels(factor(storm_data1$EVTYPE[0:100000]))
length(levels(factor(storm_data1$EVTYPE[0:200000])))
levels(factor(storm_data1$EVTYPE[0:200000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:400000])))
levels(factor(storm_data1$EVTYPE[0:400000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:500000])))
levels(factor(storm_data1$EVTYPE[0:500000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:550000])))
levels(factor(storm_data1$EVTYPE[0:550000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:600000])))
levels(factor(storm_data1$EVTYPE[0:600000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:650000])))
levels(factor(storm_data1$EVTYPE[0:650000]))[0:2]
print("length of factors to 200000rows are", length(levels(factor(storm_data1$EVTYPE[0:200000]))))
print("length of factors to 200000rows are"+ length(levels(factor(storm_data1$EVTYPE[0:200000]))))
print("length of factors to 200000rows are"+"dsfd")
print("length of factors to 200000rows are)
levels(factor(storm_data1$EVTYPE[0:100000]))
length(levels(factor(storm_data1$EVTYPE[0:200000])))
levels(factor(storm_data1$EVTYPE[0:200000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:400000])))
levels(factor(storm_data1$EVTYPE[0:400000]))[0:2]
levels(factor(storm_data1$EVTYPE[0:100000]))
length(levels(factor(storm_data1$EVTYPE[0:200000])))
levels(factor(storm_data1$EVTYPE[0:200000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:400000])))
levels(factor(storm_data1$EVTYPE[0:400000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:500000])))
levels(factor(storm_data1$EVTYPE[0:500000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:550000])))
levels(factor(storm_data1$EVTYPE[0:550000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:600000])))
levels(factor(storm_data1$EVTYPE[0:600000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:650000])))
levels(factor(storm_data1$EVTYPE[0:650000]))[0:2]
levels(factor(storm_data1$EVTYPE[0:100000]))
length(levels(factor(storm_data1$EVTYPE[0:200000])))
levels(factor(storm_data1$EVTYPE[0:200000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:400000])))
levels(factor(storm_data1$EVTYPE[0:400000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:500000])))
levels(factor(storm_data1$EVTYPE[0:500000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:550000])))
levels(factor(storm_data1$EVTYPE[0:550000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:600000])))
levels(factor(storm_data1$EVTYPE[0:600000]))[0:2]
length(levels(factor(storm_data1$EVTYPE[0:650000])))
levels(factor(storm_data1$EVTYPE[0:650000]))[0:2]
storm_data1$EVTYPE[540000:550000]
storm_data1$EVTYPE[550000:560000]
storm_data1$EVTYPE[550999]
storm_data1$EVTYPE[550999]
storm_data[550999]
storm_data[:,550999]
storm_data[0:10,550999]
storm_data[550999,1]
storm_data[550999,:]
storm_data[550999,0:34]
storm_data1$remark[550999]
storm_data1$remarks[550999]
storm_data$remarks[550999]
storm_data$EVTYPE[550999]
storm_data[550999,0:33]
storm_data[550999,0:35]
str(storm_data[550999,0:35])
str(storm_data[550999,0:38])
str(storm_data$REMARKS)
str(storm_data$REFNUM)
storm_data$REMARKS
storm_data[550999,0:38]
storm_data[550999,0:37]
x<- c(NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA)
x
str(x)
x<-c(NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA)
x
str(x)
length(x)
storm_data_test<-read.csv("repdata_data_StormData.csv",stringsAsFactors=TRUE, colClasses=c(NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NULL,NULL))
str(storm_data_test)
storm_data_test<-read.csv("repdata_data_StormData.csv",stringsAsFactors=TRUE, colClasses=c(NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, NA,NA, NA, "NULL",NA))
str(storm_data_test)
storm_data_test1<-read.csv("repdata_data_StormData.csv",fill=TRUE)
str(storm_data_test1)
factor(storm_data_test1$EVTYPE)
levels(factor(storm_data_test1$EVTYPE))
rep("character" ,4)
class(storm_data_test1$EVTYPE))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
Sys.setlocale(category = "LC_ALL", locale = "Korean")
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv(file="repdata_data_StormData.csv",header=TRUE)
dim(storm_data)
Sys.setlocale(category = "LC_ALL", locale = "English")
setwd("C:/Users/cyj90/github/study/reproducible_research/course_project2")
storm_data<-read.csv(file="repdata_data_StormData.csv",header=TRUE)
dim(storm_data)
storm_data1<-storm_data
storm_data1$EVTYPE<-as.factor(storm_data1$EVTYPE)
length(levels(storm_data1$EVTYPE))
levels(storm_data1$EVTYPE)[0:29]
levels(factor(storm_data1$PROPDMGEXP))
levels(factor(storm_data1$CPROPDMGEXP))
storm_data1$PROPDMGEXP[grep("H",storm_data1$PROPDMGEXP)]<-gsub("H",100,storm_data1$PROPDMGEXP[grep("H",storm_data1$PROPDMGEXP)])
storm_data1$PROPDMGEXP[grep("h",storm_data1$PROPDMGEXP)]<-gsub("h",100,storm_data1$PROPDMGEXP[grep("h",storm_data1$PROPDMGEXP)])
storm_data1$PROPDMGEXP[grep("K",storm_data1$PROPDMGEXP)]<-gsub("K",1000,storm_data1$PROPDMGEXP[grep("K",storm_data1$PROPDMGEXP)])
storm_data1$PROPDMGEXP[grep("k",storm_data1$PROPDMGEXP)]<-gsub("k",1000,storm_data1$PROPDMGEXP[grep("k",storm_data1$PROPDMGEXP)])
storm_data1$PROPDMGEXP[grep("M",storm_data1$PROPDMGEXP)]<-gsub("M",1000000,storm_data1$PROPDMGEXP[grep("M",storm_data1$PROPDMGEXP)])
storm_data1$PROPDMGEXP[grep("m",storm_data1$PROPDMGEXP)]<-gsub("m",1000000,storm_data1$PROPDMGEXP[grep("m",storm_data1$PROPDMGEXP)])
storm_data1$PROPDMGEXP[grep("B",storm_data1$PROPDMGEXP)]<-gsub("B",1000000000,storm_data1$PROPDMGEXP[grep("B",storm_data1$PROPDMGEXP)])
storm_data1$CROPDMGEXP[grep("K",storm_data1$CROPDMGEXP)]<-gsub("K",1000,storm_data1$CROPDMGEXP[grep("K",storm_data1$CROPDMGEXP)])
storm_data1$CROPDMGEXP[grep("k",storm_data1$CROPDMGEXP)]<-gsub("k",1000,storm_data1$CROPDMGEXP[grep("k",storm_data1$CROPDMGEXP)])
storm_data1$CROPDMGEXP[grep("M",storm_data1$CROPDMGEXP)]<-gsub("M",1000000,storm_data1$CROPDMGEXP[grep("M",storm_data1$CROPDMGEXP)])
storm_data1$CROPDMGEXP[grep("m",storm_data1$CROPDMGEXP)]<-gsub("m",1000000,storm_data1$CROPDMGEXP[grep("m",storm_data1$CROPDMGEXP)])
storm_data1$CROPDMGEXP[grep("B",storm_data1$PROPDMGEXP)]<-gsub("B",1000000000,storm_data1$CROPDMGEXP[grep("B",storm_data1$CROPDMGEXP)])
storm_data1$PROPDMGEXP<-as.numeric(storm_data1$PROPDMGEXP)
storm_data1$CROPDMGEXP<-as.numeric(storm_data1$CROPDMGEXP)
levels(factor(storm_data1$PROPDMGEXP))
levels(factor(storm_data1$CROPDMGEXP))
storm_data1$PROPDMGEXP[is.na(storm_data1$PROPDMGEXP)]<-0
storm_data1$CROPDMGEXP[is.na(storm_data1$CROPDMGEXP)]<-0
by_FATALITIES<-storm_data1%>%
group_by(EVTYPE)%>%
summarise(
mean=mean(FATALITIES,na.rm=TRUE),
median=median(FATALITIES,na.rm=TRUE),
sum=sum(FATALITIES))
head(arrange(by_FATALITIES,desc(sum)))
by_INJURIES<-storm_data1%>%
group_by(EVTYPE)%>%
summarise(
mean=mean(INJURIES,na.rm=TRUE),
median=median(INJURIES,na.rm=TRUE),
sum=sum(INJURIES))
by_FATALITIES<-head(arrange(by_FATALITIES,desc(sum)))
by_INJURIES<-head(arrange(by_INJURIES,desc(sum)))
ggplot(by_FATALITIES, aes(sum))+geom_bar()
by_FATALITIES
ggplot(by_FATALITIES, aes(x=EVTYPE, y=sum))+geom_bar()
ggplot(by_FATALITIES, aes(x=EVTYPE, y=sum))+geom_bar(stat=identity)
ggplot(by_FATALITIES, aes(x=EVTYPE, y=sum))+geom_bar(stat='identity')
ggplot(by_FATALITIES, aes(x=EVTYPE, y=sum))+geom_bar(stat='identity')
ggplot(by_INJURIES, aes(x=EVTYPE, y=sum))+geom_bar(stat='identity')
storm_data2<-storm_data1
storm_data2
storm_data2$PROPDMG*storm_data2$PROPDMGEXP
storm_data2<-storm_data1
storm_data2$PROPDMG_total<-storm_data2$PROPDMG*storm_data2$PROPDMGEXP
storm_data2<-storm_data1
storm_data2$PROPDMG_total<-storm_data2$PROPDMG*storm_data2$PROPDMGEXP
storm_data2$CROPDMG_total<-storm_data2$CROPDMG*storm_data2$CROPDMGEXP
storm_data2<-storm_data1
storm_data2$PROPDMG_total<-storm_data2$PROPDMG*storm_data2$PROPDMGEXP
storm_data2$CROPDMG_total<-storm_data2$CROPDMG*storm_data2$CROPDMGEXP
storm_data2$TOTAL_damage<-storm_data2$PROPDMG_total+storm_data2$CROPDMG_total
by_TOTAL_damage<-storm_data2%>%
group_by(EVTYPE)%>%
summarise(
mean=mean(TOTAL_damage,na.rm=TRUE),
median=median(TOTAL_damage,na.rm=TRUE),
sum=sum(TOTAL_damage))
head(arrange(by_TOTAL_damage,desc(sum)))
ggplot(by_TOTAL_damage, aes(x=EVTYPE, y=sum))+geom_bar(stat='identity')
by_TOTAL_damage<-storm_data2%>%
group_by(EVTYPE)%>%
summarise(
mean=mean(TOTAL_damage,na.rm=TRUE),
median=median(TOTAL_damage,na.rm=TRUE),
sum=sum(TOTAL_damage))
by_TOTAL_damage<-head(arrange(by_TOTAL_damage,desc(sum)))
ggplot(by_TOTAL_damage, aes(x=EVTYPE, y=sum))+geom_bar(stat='identity')
